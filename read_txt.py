import os
import tensorflow as tf
from langchain_ollama.llms import OllamaLLM
from langchain.prompts import PromptTemplate
import chromadb
from chromadb.config import Settings
import numpy as np
import cv2
import ast  # To safely evaluate string representations of lists

model = tf.keras.applications.MobileNetV2(input_shape=(224, 224, 3), weights='imagenet', include_top=False, pooling='avg')

def preprocess_image(image):
    img = tf.image.resize(image, (224, 224))
    img = tf.keras.applications.mobilenet_v2.preprocess_input(img)
    return img

def extract_features(image):
    preprocessed_image = preprocess_image(image)
    features = model.predict(tf.expand_dims(preprocessed_image, axis=0))
    return features

# -----------------------------------
# ChromaDB: Storing Image Embeddings
# -----------------------------------

client = chromadb.Client(Settings())
collection = client.create_collection("image_embeddings")

def add_image_embedding(image_id, embedding, location):
    collection.add(
        ids=[image_id.split(".")[0]],
        embeddings=[embedding],
        metadatas=[{'image_id': location}]
    )

# # -----------------------------------
# # Workflow to Save and Search Images
# # -----------------------------------

def save_image(image_id, image):
    # Extract image features (embeddings)
    embedding = extract_features(image)
    print(embedding)
    add_image_embedding(image_id, embedding)



# Specify the directory path
directory_path = "./database"

# List all files in the directory
file_names = os.listdir(directory_path)


file_name = "database.txt"

index = 0

file_name_list = list()
embeding_list = list()
location_list = list()

with open(file_name, "r") as file:
    for line in file:
        if index == 0:

            file_name_list.append(line.strip())
            index = index + 1
        elif index == 1:
            array = np.array([float(num) for num in line.split()])

            embeding_list.append(array)
            index = index + 1
        elif index == 2:
            location_list.append(line.strip())

            index = 0


for i in range(len(file_name_list)):


    add_image_embedding(file_name_list[i], embeding_list[i], location_list[i])




results = collection.get(
    ids=["dog_003"],
)
print(results.values())






list2=[0.0, 0.059384763, 1.3329228, 0.0, 0.28228208, 0.8764725, 0.0, 0.26048416, 0.01897556, 0.18259422, 0.06678915, 0.0, 0.94758266, 0.03818801, 0.0, 0.074198954, 0.07681061, 0.66766715, 0.0, 0.0, 0.0, 1.0047257, 0.17294323, 0.034306437, 0.68383867, 0.43261084, 0.037966028, 0.35138464, 0.0, 0.14962864, 0.8595024, 0.0, 0.10491014, 0.0, 1.0642909, 0.0, 0.9210406, 0.030408178, 0.59145635, 1.2426962, 1.630544, 0.0, 0.0, 0.3667499, 0.14961295, 1.5514799, 0.0, 0.0, 0.0, 0.56641996, 0.0, 0.024624405, 0.028088298, 0.08662741, 1.3350674, 0.7154298, 0.0, 0.5923066, 0.12797211, 0.0, 0.54364777, 0.0, 0.77612716, 0.005166589, 0.40912542, 0.0, 0.0, 0.11833324, 0.011037379, 0.20270036, 0.0, 0.24452195, 0.3778643, 0.0, 0.15975805, 0.09811859, 0.79623306, 0.0, 0.07131656, 0.0, 1.4211538, 0.5102482, 0.115328625, 0.15174279, 0.0, 0.69848853, 0.14029196, 0.0, 0.0069534825, 0.27092686, 0.0, 0.014550832, 0.09144808, 0.31705984, 0.11920766, 0.0, 1.5349113, 0.08111388, 0.0061604735, 0.20543084, 0.0, 0.099879086, 0.0, 0.0, 1.1497012, 0.0, 0.014328266, 0.0, 0.0, 1.3706783, 0.0, 0.7401718, 0.0, 0.0, 0.39398676, 0.011127092, 0.0, 0.33005017, 0.17426439, 0.023350336, 0.36529887, 0.0067774616, 0.0, 0.0554697, 1.1284885, 1.8069133, 0.010394252, 1.4790319, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5835169, 0.0, 1.3359466, 0.0, 0.00082637824, 0.24754988, 0.10485762, 0.18773118, 0.36868316, 0.00085388887, 1.8636525, 0.33297843, 0.2932999, 0.0, 0.0, 0.0, 0.0, 0.004589295, 1.0449828, 0.0, 0.0025169996, 0.19881037, 0.025164478, 0.25604844, 0.104156114, 1.0180236, 0.6943898, 1.457328, 0.0, 0.03169953, 0.0, 0.049279183, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6795583, 1.5272074, 0.096602984, 0.020848878, 0.0, 0.59406805, 1.1759287, 0.18941657, 0.0, 0.0, 0.1061632, 1.0601791, 0.0, 0.8007024, 1.1356114, 1.3011734, 0.0, 0.114698656, 0.7643002, 0.17179953, 1.2794286, 0.0, 0.44267675, 0.036782265, 0.0, 0.1333935, 0.09667501, 0.0, 2.4290369, 0.5167234, 0.22732851, 0.0, 0.011360402, 0.0, 0.34294385, 0.0, 0.0, 0.004723442, 0.6916372, 0.6546277, 0.051964477, 0.0, 0.0, 0.0, 1.880769, 1.0199271, 0.3150046, 0.0, 0.045369558, 0.12005937, 0.32360277, 0.023761643, 0.0, 0.019379012, 0.0, 1.2042172, 0.0105081, 0.0, 0.027753295, 0.0, 1.0611466, 0.27754188, 0.0, 0.5942111, 0.18773137, 0.7268199, 0.76328784, 0.13772269, 0.0, 0.0, 0.0, 0.0, 0.0023666013, 0.33657828, 0.0044927597, 0.0, 0.13146096, 1.3719202, 0.39929572, 0.07482849, 0.0083486205, 0.07183339, 0.7875416, 0.036069345, 0.0, 0.0, 0.0, 0.03829298, 0.0, 0.0, 1.1712255, 1.3401412, 1.7673712, 1.1646628, 0.50626504, 0.0, 0.030808955, 0.12660657, 0.0, 0.636043, 0.21200639, 0.1902502, 0.46491453, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6227198, 1.0875607, 0.05362714, 1.070461, 0.24470271, 0.121555105, 0.20568015, 0.25281465, 0.0, 0.84571606, 0.0, 0.0, 0.85162437, 0.049372926, 0.09713498, 0.0, 0.0, 0.4135826, 0.0, 1.714074, 0.18681328, 0.0, 0.576564, 0.0, 1.1669804, 0.0, 1.0534185, 1.0166879, 0.0, 0.0, 0.0, 1.6410701, 0.009282988, 0.03870128, 0.20491892, 0.3070625, 1.9631735, 0.10832262, 0.0, 0.0, 0.11312517, 0.36420286, 0.0, 0.0, 0.006227581, 1.4805354, 0.012845263, 0.0, 0.0, 0.0, 0.0, 0.0, 0.21342652, 1.2936087, 0.0, 0.0, 0.8888132, 0.4655145, 0.12791789, 0.44913405, 2.3448873, 0.0, 0.39936563, 1.2899158, 0.0, 0.0, 0.047822826, 0.0, 0.14093283, 0.10550143, 0.0, 0.0, 0.04835526, 0.9102669, 0.0, 0.08406281, 0.007703392, 0.08009326, 0.8000785, 0.42313695, 0.0, 0.0, 0.83479744, 0.039271645, 0.5504131, 0.00879023, 1.0138391, 0.09079346, 1.3037394, 0.007613951, 0.0, 0.0, 0.60856354, 0.7454239, 0.009151157, 0.0, 2.413995, 0.0, 0.06873891, 0.101879925, 0.022020612, 0.0, 0.0073931753, 1.0124252, 0.1395123, 0.49311513, 0.66866344, 0.0, 0.06637271, 0.04805482, 0.0, 0.08521218, 0.0, 0.0, 0.037315406, 0.00230796, 0.9031153, 0.0138177, 0.07836444, 0.031763777, 0.017392684, 2.2055783, 0.312553, 0.74448043, 0.28022778, 0.0, 0.02200438, 0.0, 0.06058839, 0.0, 0.07247538, 0.23751208, 0.2845052, 0.0, 0.08770943, 0.11251052, 0.0, 0.021325627, 0.008726091, 0.062466826, 0.0014186003, 0.0, 0.37118936, 0.0033947886, 0.0, 0.006905322, 0.0319853, 0.0996556, 0.16167869, 0.023946557, 0.0, 0.04916016, 1.8078059, 0.0, 0.0, 1.0497218, 1.3516692, 0.26861638, 0.56487, 0.012874623, 0.020266766, 0.011747351, 0.0, 0.0, 0.0, 0.0, 0.5168812, 0.0, 0.39780986, 0.0, 0.010992293, 0.08803812, 0.0, 0.26573497, 2.5276043, 0.022493236, 0.0, 0.5859459, 0.0, 0.13219196, 1.7002283, 1.1513865, 0.2942033, 0.0, 0.0, 0.2186372, 0.05060223, 0.17746212, 0.0, 0.0, 0.9549212, 0.0, 0.0, 0.38198984, 0.0, 0.0, 0.6907228, 0.0, 0.0, 0.0014100173, 0.0, 0.0, 0.0675053, 0.09515816, 0.94797283, 0.0, 0.0012969679, 0.0, 0.75332665, 0.50347525, 0.7996142, 0.5389563, 0.033677842, 0.39381966, 0.0, 0.59296703, 0.0, 0.038253095, 0.18646556, 0.9123708, 0.0, 0.08129292, 0.62319446, 0.006476013, 0.0, 1.4838632, 0.0, 0.06935831, 0.24262363, 0.0, 1.3029889, 0.02651491, 1.2950315, 0.054153606, 0.56297153, 0.035717867, 0.0, 0.0, 1.2350786, 0.056417562, 0.0, 0.0, 1.5123256, 0.48821783, 0.25564954, 0.0, 0.49954388, 2.1061563, 0.08334824, 0.080249, 0.0, 0.0, 0.046856374, 0.9298379, 0.0, 0.0, 0.0, 1.4250742, 1.3506494, 0.108786054, 1.7932159, 0.0, 0.0, 0.040127374, 0.0, 0.36972034, 0.017109627, 0.9546451, 0.105818994, 0.0, 0.0, 0.0, 0.45767608, 0.72953176, 0.0, 0.65073055, 1.322825, 0.0, 0.99114084, 0.10458241, 0.5948076, 1.1864359, 0.72995704, 1.7506669, 0.31985435, 0.6691127, 0.0, 0.054001193, 0.6148469, 0.017075822, 0.0, 1.2349985, 0.0, 0.2568349, 0.23734933, 0.0, 0.26219606, 0.4806023, 0.0, 0.0, 0.0, 0.0, 0.20031069, 0.78140026, 0.10439578, 1.2193426, 0.53137976, 0.0, 0.0, 0.38082248, 0.27283844, 0.0, 0.0, 0.0, 0.0, 0.2897476, 0.0, 0.0, 0.09655968, 0.7731628, 0.0, 0.0, 1.881703, 0.7535466, 0.0, 0.030179355, 1.0228541, 0.18101637, 0.21732907, 0.45951554, 0.0, 1.8054806, 0.030701501, 0.034392044, 0.31286776, 0.013634439, 0.0, 0.0, 1.2418356, 0.0, 1.4768952, 0.0, 0.0, 0.0, 0.40307117, 0.2597323, 0.0, 0.0, 0.030427739, 0.0, 0.762098, 0.0, 2.2074528, 0.0, 0.41583523, 0.13809429, 0.42457873, 0.112631924, 1.1953202, 0.5919276, 0.0, 0.56645375, 0.0, 0.43934786, 0.20155066, 0.6307848, 0.08109255, 0.27232847, 0.077898376, 0.14376931, 0.0, 0.043392878, 0.0, 0.569101, 1.4269272, 1.1630932, 0.0, 1.444023, 0.1378338, 0.0, 0.0, 0.77603835, 0.0, 0.120244525, 0.036804833, 0.8525601, 0.0, 0.0, 1.3792413, 0.0, 0.5164354, 0.0, 1.0325624, 0.0, 0.0, 0.0, 0.6381469, 1.4053155, 0.0, 0.14833465, 0.59677047, 0.0, 0.17526595, 0.052292082, 0.04233332, 0.0, 0.0, 1.0711135, 0.0, 0.0076553775, 0.0, 0.42036882, 1.0246934, 0.2560301, 0.3350656, 0.20447463, 1.835789, 0.14952782, 1.2915946, 1.8543034, 1.5301147, 0.03622099, 0.18708438, 0.34988433, 0.26372412, 0.0, 0.0, 0.0, 0.21250285, 0.0, 0.22205542, 0.0, 0.30009663, 1.35967, 0.0034122271, 0.0, 0.0, 0.68978757, 0.1681039, 1.3629329, 0.0, 0.0, 0.008712243, 0.26071373, 0.0, 0.0, 0.0, 0.44228604, 0.0, 0.054393865, 0.044085678, 0.0, 0.0, 0.1547235, 0.0, 0.0044336417, 0.031408593, 0.3440268, 0.0, 0.0, 0.05394089, 0.0, 0.004230149, 0.0, 0.01240342, 0.0181518, 1.2864482, 0.16240512, 0.64109564, 0.0024779476, 0.43818906, 1.1984043, 0.008062256, 0.0, 0.1781566, 0.0, 0.0, 0.0, 0.0, 0.66580814, 0.0, 0.0, 0.15333568, 1.1018295, 0.36428043, 0.28491887, 0.12638749, 0.13665767, 1.811738, 0.0, 0.0, 0.040712144, 0.00033056492, 0.0, 0.0, 0.060851943, 0.0, 0.42151618, 0.03356088, 0.41741914, 0.0, 0.41397312, 0.03168322, 0.0, 0.011131326, 0.0, 0.09075505, 0.028633477, 0.0, 0.0, 0.0, 0.010837866, 0.07124792, 0.0, 0.05560584, 0.0, 0.07744071, 0.19344626, 0.062345922, 0.6008922, 1.0880764, 0.0553381, 0.50753057, 0.7956789, 1.3797415, 0.029509224, 0.0, 0.055859584, 0.4833782, 0.0, 0.061689533, 0.08965502, 0.0, 0.0, 0.0, 0.0, 1.0592154, 0.0, 0.83255285, 0.21557, 0.00096014567, 0.04758795, 0.21145876, 0.034104522, 0.0, 0.33561748, 0.81721276, 0.0007899343, 0.009099192, 0.0045622224, 0.9267382, 0.38658184, 0.0, 0.13136782, 0.06828401, 0.0, 1.1848792, 0.88488585, 0.7834191, 0.17408091, 0.0, 0.0, 0.0, 0.10589875, 0.0, 0.0, 0.06413093, 0.0, 0.02219967, 0.35528085, 0.14915624, 0.51043224, 0.055035047, 0.0, 0.4193863, 0.0, 0.0, 0.0, 0.023690185, 0.44112155, 0.0, 0.30515707, 1.599976, 0.00075815164, 0.05694067, 0.42776465, 0.0, 0.0, 1.1313676, 0.0, 0.25997138, 0.0, 0.028946321, 0.3368514, 0.057505842, 0.5248758, 1.2085371, 0.0, 0.13245746, 0.12242762, 0.15715957, 1.3842602, 1.9614186, 1.5786642, 0.38180977, 0.04463581, 0.06769072, 0.0048602163, 0.0, 0.98140615, 0.005386742, 1.9287919, 0.0, 0.7829475, 0.1778216, 0.0, 0.0, 0.0, 0.38586172, 0.16175167, 1.5982616, 0.06100829, 0.18993805, 0.7678929, 0.0, 0.021338278, 0.44544852, 0.36721283, 0.14732356, 0.2042984, 0.5741035, 0.0, 0.67819846, 0.14539136, 0.93127704, 0.0, 0.7354386, 0.20256984, 0.0, 0.005775364, 0.0, 0.21442008, 0.14077501, 0.075443275, 0.2701882, 0.0, 0.0062750895, 1.3303584, 0.92172754, 0.060235888, 0.35376292, 0.1339303, 0.0, 0.0, 0.4949427, 0.004548997, 0.6096126, 0.43958437, 1.5919025, 0.0, 0.53100586, 0.06704425, 0.0, 0.014762207, 0.030086381, 1.3552889, 0.57117593, 0.0, 0.26598507, 0.526903, 1.5212681, 0.8229039, 0.99082077, 0.21539015, 0.20818365, 0.0, 1.2021297, 0.010804819, 0.068012394, 0.109078884, 0.47149146, 0.3516244, 0.0, 1.4808334, 0.21138874, 0.0, 0.087932944, 0.8191345, 0.7347219, 0.5945152, 0.75572, 0.46548182, 0.23657066, 0.0, 0.68259805, 0.6357204, 0.50450736, 0.043017954, 0.2619084, 0.0, 0.24707045, 0.0, 0.031319354, 0.89092183, 0.0, 1.0881761, 0.8886819, 1.7671993, 0.59627897, 0.6956611, 0.0, 0.24773297, 0.0, 0.0363746, 0.11977313, 0.0, 0.0, 0.010415622, 0.17391172, 2.0596356, 1.4876446, 0.0, 0.0, 0.33523765, 0.0, 1.0369874, 0.0609328, 0.3863146, 0.0, 0.0, 0.026236622, 0.0964624, 0.11153686, 0.97657007, 0.07260594, 0.0, 0.0, 0.15425652, 0.004682784, 0.55517024, 0.5812033, 1.0916214, 0.052653752, 0.09977532, 0.13180551, 0.0, 0.0, 0.0, 0.0, 0.0064676926, 0.0, 0.039194174, 0.22578512, 0.20860057, 0.48003677, 0.3360265, 0.16099901, 1.370368, 0.71077466, 0.02629789, 0.41355348, 0.0, 0.0, 0.0, 0.0, 0.1203412, 0.8127815, 0.0, 0.48394588, 0.0, 0.07475715, 1.4257125, 0.0, 0.0, 0.04113461, 0.0, 0.18573333, 0.0, 0.0, 0.0, 0.6911811, 0.0, 0.55296725, 0.16166139, 0.0, 0.78457546, 0.19375648, 0.020731917, 0.0, 0.12647389, 0.0, 0.010777911, 0.4944983, 0.0, 0.002386132, 0.0, 0.025957147, 0.07147223, 0.019407399, 0.15987176, 0.21551763, 0.474566, 0.0, 0.0, 0.0, 0.11791674, 0.0071867243, 0.64455456, 0.0, 0.06790898, 0.0, 0.02229459, 0.028418133, 0.49467358, 0.20659727, 0.0, 0.0, 0.53507215, 0.017413082, 0.41586402, 0.0, 0.0, 0.006318141, 1.9140859, 0.2534607, 0.07003553, 0.6215391, 0.07274554, 0.15927313, 0.0, 0.0, 0.0, 0.796622, 0.30622128, 0.32752672, 1.3799027, 0.0, 0.0, 0.037673086, 0.7928904, 0.0, 0.028211826, 0.0, 0.78455603, 0.0, 0.061504032, 0.0, 1.210367, 0.0, 0.46824047, 0.0, 1.6002004, 0.7504724, 0.010682924, 1.4119676, 0.25503772, 0.003890534, 0.0044660177, 0.0, 0.0, 0.030007673, 0.0, 1.676701, 0.05974177, 0.999774, 0.0, 0.08816258, 0.0, 0.09484138, 0.013279554, 1.394463, 0.0, 0.0, 0.5618837, 0.23971388, 0.0, 0.16921608, 0.00040369618, 0.5021499, 0.62063223, 1.5969949, 0.024522422, 0.048711807, 0.0, 0.0, 0.58704036, 0.0, 0.28849548, 0.0, 0.0, 1.6994722, 0.7259736, 2.0039463, 0.36727905, 0.009118421, 0.1362287, 0.0, 0.032626163, 0.78566414, 0.0126375565, 0.0, 0.18850984, 0.57286024, 0.0, 0.49103662, 0.003039185, 0.07495302, 0.20003626, 0.0, 0.0, 0.0027442465, 0.17589554, 1.4836923, 0.44215083, 0.14630122, 1.529808, 0.0, 1.1322439, 0.0, 0.17372252, 0.0, 0.0040170318, 0.024278738, 1.4687732, 0.0, 0.35585615, 1.488474, 0.17083444, 0.35591897, 0.74447733, 0.09479888, 0.0, 0.0, 0.0, 0.0, 0.5491115, 0.096068434, 0.12881811, 0.3397849, 0.766865, 0.026152115, 0.36493894, 0.12189168, 0.23125072, 0.0, 0.44775864, 0.49114215, 0.0, 0.4263012, 0.29075205, 0.38462338, 0.0, 0.72521865, 0.0, 2.307942, 1.2408559, 0.6618606, 0.0, 0.6849231, 0.0, 0.0, 1.2126048, 0.0076544625, 0.0, 0.0, 0.103522226, 0.40461552, 0.0, 0.48248228, 0.0, 0.014483773, 0.7610259, 0.0, 0.086611435, 0.0469297, 0.0, 0.0, 1.6379122, 0.3928191, 0.60440385, 0.0, 0.7590757, 0.004476664, 0.4476762, 0.030843034, 0.10152613, 1.6265446, 0.0, 0.76520026, 0.31096327, 0.07974831, 0.0, 0.02438409, 0.0073778583, 0.011953714, 0.5808144, 0.0, 0.023059728, 0.6748306]





results = collection.query(
    query_embeddings=list2,
    n_results=1  # Change this number for the number of results you want
)

print(results)